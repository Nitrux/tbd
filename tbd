#! /bin/bash


shopt -s expand_aliases

alias quiet='> /dev/null 2>&1'

alias puts='printf "%b"'
alias putr='printf "%b\n"'

throw () {
    >&2 putr "\e[31m${*}\e[0m"

    test "$abort_on_error" ||
        return ${err:-1}

    exit ${err:-1}
}

on_error () {
    case "$*" in
        ( 'abort' )
            abort_on_error='true';;

        ( 'pass' | 'ignore' | 'continue' )
            abort_on_error='';;

        ( * )
            throw "malformed instruction: on_error $*."
    esac
}

inc () { : $(($1 = $1 + ${2:-1})); }

@ () {
    putr "${new_ln}\e[34m:: ${*}\e[0m"
    new_ln="\n"
}

- () {
    inc tests
    puts "    ${*}... "

    case "$2" in
        ( 'prints' )
            test $# = 3 || throw "malformed test."
            quiet test "$(eval "$1")" = "$3";;

        ( 'fails' )
            test $# = 2 || throw "malformed test."
            ! quiet eval "$1";;

        ( 'works' | 'passes' | 'succeeds' )
            test $# = 2 || throw "malformed test."
            quiet eval "$1";;

        ( * )
            quiet command -V "$2" || throw "no such test '$2'."
            quiet "$2" "$@";;
    esac

    err=$?
    test $err = 0 && { inc passed_tests; putr "\e[32mpassed.\e[0m"; } \
                  || { inc failed_tests; throw "failed!"; }
}

tbd_main () {
    abort_on_error="true"

    trap 'putr "" "  \e[3m${tests:-0} tests executed, ${passed_tests:-0} passed, ${failed_tests:-0} failed.\e[0m" ""' \
        INT EXIT TERM

    for tf in "${@:-testfile}"; do
        test -f "$tf" && source "$tf" \
                      || throw "'$tf' is not a file. aborting."
    done

    return ${abort_on_error:+${failed_tests}}
}

tbd_main "$@"
