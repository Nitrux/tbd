#! /bin/bash


shopt -s expand_aliases

alias putr='printf "%b\n"' \
      quiet='> /dev/null 2>&1'

abort () {
    >&2 putr "\e[31m${*}\e[0m"
    "${abort_on_error:=true}" && exit   ${err:-1} \
                              || return ${err:-1}
}

on_error () {
    case "$*" in
        ( 'quit' | 'abort' )  abort_on_error='true';;
        ( 'continue' )        abort_on_error='false';;

        ( * )  abort "malformed instruction: on_error $*.";;
    esac
}

@ () { putr "${new_ln}\e[33m${*}\e[0m"; new_ln="\n"; }

- () {
    printf '%s' "  $*"
    case "$2" in
        ( 'works' )
            test $# = 2 || abort "malformed test."
            quiet eval "$1";;

        ( 'fails' )
            test $# = 2 || abort "malformed test."
            quiet eval ! "$1";;

        ( 'prints' )
            test $# = 3 || abort "malformed test."
            quiet test "$(eval "$1" 2> /dev/null)" = "$3";;

        ( * )
            quiet command -V "$2" || abort "no such test '$2'."
            quiet "$2" "$@";;
    esac

    err=$?

    : $(( ++tests ))
    test $err = 0 && { : $(( ++passed_tests )); putr " \e[32mok.\e[0m"; } \
                  || { : $(( ++failed_tests )); abort " failed!"; }
}

tbd_main () {
    trap 'exit' INT
    trap 'putr "" "  \e[3m${tests:-0} tests executed, ${passed_tests:-0} passed, ${failed_tests:-0} failed.\e[0m"' \
        EXIT TERM

    for tf in "${@:-testfile}"; do
        test -r "$tf" || abort "could not read from '$tf'. aborting."
        source "$tf"
    done

    "${abort_on_error:=true}" && exit $failed_tests \
                              || exit 0
}

tbd_main "$@"
